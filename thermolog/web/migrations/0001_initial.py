# Generated by Django 3.2.7 on 2021-10-04 18:31

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Thermometer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated_at')),
                ('thing_name', models.CharField(max_length=26, unique=True, verbose_name='name')),
                ('thing_nick_name', models.CharField(max_length=1024, verbose_name='friendly name')),
                ('sub_type', models.CharField(max_length=10, verbose_name='type code')),
            ],
        ),
        migrations.CreateModel(
            name='WeatherRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated_at')),
                ('location_name', models.CharField(max_length=256, verbose_name='location_name')),
                ('location', models.JSONField(null=True, verbose_name='location')),
                ('last_updated', models.DateTimeField(null=True, verbose_name='last_updated')),
                ('temp_c', models.FloatField(null=True, verbose_name='temperature_celcius')),
                ('feelslike_c', models.FloatField(null=True, verbose_name='feelslike_celcius')),
                ('is_day', models.BooleanField(null=True, verbose_name='is_day')),
                ('condition', models.JSONField(null=True, verbose_name='condition')),
                ('wind_kph', models.FloatField(null=True, verbose_name='wind_speed_km/h')),
                ('wind_degree', models.FloatField(null=True, verbose_name='wind_degree')),
                ('wind_dir', models.CharField(max_length=10, null=True, verbose_name='wind_direction')),
                ('pressure_mb', models.FloatField(null=True, verbose_name='pressure_mb')),
                ('precip_mm', models.FloatField(null=True, verbose_name='precip_mm')),
                ('humidity', models.IntegerField(null=True, verbose_name='humidity')),
                ('cloud', models.IntegerField(null=True, verbose_name='cloud')),
                ('vis_km', models.FloatField(null=True, verbose_name='visibility_km')),
                ('uv', models.FloatField(null=True, verbose_name='ultraviolet index')),
                ('gust_km', models.FloatField(null=True, verbose_name='wind gust')),
            ],
            options={
                'unique_together': {('location_name', 'last_updated')},
            },
        ),
        migrations.CreateModel(
            name='ThermoRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated_at')),
                ('sync_status', models.CharField(choices=[('success', 'success'), ('error', 'error')], max_length=256, verbose_name='sync status')),
                ('connected', models.BooleanField(verbose_name='is connected')),
                ('working_status', models.CharField(max_length=256, null=True, verbose_name='working status')),
                ('air_tem', models.IntegerField(null=True, verbose_name='air temperature')),
                ('floor_tem', models.IntegerField(null=True, verbose_name='floor temperature')),
                ('thermometer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='web.thermometer')),
            ],
        ),
    ]
